package tasks;

public class BinaryTreeInorderTraversal94 {
    public static void main(String[] args) {

    }

    public static double getProbability(int[] balls) {
        int total = 0;
        for (int ball : balls) {
            total += ball;
        }
        int n = total / 2;

        double[] dp = new double[1 << 10];
        dp[0] = 1;
        for (int ball : balls) {
            double[] ndp = new double[1 << 10];
            for (int i = 0; i < (1 << 10); i++) {
                for (int j = 0; j <= Math.min(ball, n); j++) {
                    ndp[i | (1 << j)] += dp[i] * binomial(ball, j) / binomial(n, j);
                }
            }
            dp = ndp;
        }

        double res = 0;
        for (int i = 0; i < (1 << 10); i++) {
            res += dp[i] * dp[i];
        }
        return res;
    }

    private static double binomial(int n, int k) {
        double res = 1;
        for (int i = 1; i <= k; i++) {
            res = res * (n - i + 1) / i;
        }
        return res;
    }


}